// Code generated by protoc-gen-go. DO NOT EDIT.
// source: demo.proto

package demo

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TestMsgReq struct {
	TestNumber           uint32   `protobuf:"varint,1,opt,name=testNumber,proto3" json:"testNumber,omitempty"`
	TestString           string   `protobuf:"bytes,2,opt,name=testString,proto3" json:"testString,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestMsgReq) Reset()         { *m = TestMsgReq{} }
func (m *TestMsgReq) String() string { return proto.CompactTextString(m) }
func (*TestMsgReq) ProtoMessage()    {}
func (*TestMsgReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca53982754088a9d, []int{0}
}
func (m *TestMsgReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestMsgReq.Unmarshal(m, b)
}
func (m *TestMsgReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestMsgReq.Marshal(b, m, deterministic)
}
func (m *TestMsgReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestMsgReq.Merge(m, src)
}
func (m *TestMsgReq) XXX_Size() int {
	return xxx_messageInfo_TestMsgReq.Size(m)
}
func (m *TestMsgReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TestMsgReq.DiscardUnknown(m)
}

var xxx_messageInfo_TestMsgReq proto.InternalMessageInfo

func (m *TestMsgReq) GetTestNumber() uint32 {
	if m != nil {
		return m.TestNumber
	}
	return 0
}

func (m *TestMsgReq) GetTestString() string {
	if m != nil {
		return m.TestString
	}
	return ""
}

type TestMsgRsp struct {
	TestReply            string   `protobuf:"bytes,1,opt,name=testReply,proto3" json:"testReply,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestMsgRsp) Reset()         { *m = TestMsgRsp{} }
func (m *TestMsgRsp) String() string { return proto.CompactTextString(m) }
func (*TestMsgRsp) ProtoMessage()    {}
func (*TestMsgRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca53982754088a9d, []int{1}
}
func (m *TestMsgRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestMsgRsp.Unmarshal(m, b)
}
func (m *TestMsgRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestMsgRsp.Marshal(b, m, deterministic)
}
func (m *TestMsgRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestMsgRsp.Merge(m, src)
}
func (m *TestMsgRsp) XXX_Size() int {
	return xxx_messageInfo_TestMsgRsp.Size(m)
}
func (m *TestMsgRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_TestMsgRsp.DiscardUnknown(m)
}

var xxx_messageInfo_TestMsgRsp proto.InternalMessageInfo

func (m *TestMsgRsp) GetTestReply() string {
	if m != nil {
		return m.TestReply
	}
	return ""
}

func init() {
	proto.RegisterType((*TestMsgReq)(nil), "demo.TestMsgReq")
	proto.RegisterType((*TestMsgRsp)(nil), "demo.TestMsgRsp")
}

func init() { proto.RegisterFile("demo.proto", fileDescriptor_ca53982754088a9d) }

var fileDescriptor_ca53982754088a9d = []byte{
	// 154 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x49, 0xcd, 0xcd,
	0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0x7c, 0xb8, 0xb8, 0x42, 0x52,
	0x8b, 0x4b, 0x7c, 0x8b, 0xd3, 0x83, 0x52, 0x0b, 0x85, 0xe4, 0xb8, 0xb8, 0x4a, 0x52, 0x8b, 0x4b,
	0xfc, 0x4a, 0x73, 0x93, 0x52, 0x8b, 0x24, 0x18, 0x15, 0x18, 0x35, 0x78, 0x83, 0x90, 0x44, 0x60,
	0xf2, 0xc1, 0x25, 0x45, 0x99, 0x79, 0xe9, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x48, 0x22,
	0x4a, 0x5a, 0x08, 0xd3, 0x8a, 0x0b, 0x84, 0x64, 0xb8, 0x38, 0x41, 0x72, 0x41, 0xa9, 0x05, 0x39,
	0x95, 0x60, 0xc3, 0x38, 0x83, 0x10, 0x02, 0x46, 0x16, 0x5c, 0x2c, 0x2e, 0xa9, 0xb9, 0xf9, 0x42,
	0x06, 0x5c, 0x1c, 0x20, 0x3d, 0x1e, 0x89, 0x19, 0x89, 0x42, 0x02, 0x7a, 0x60, 0x07, 0x22, 0x5c,
	0x24, 0x85, 0x26, 0x52, 0x5c, 0xa0, 0xc4, 0x90, 0xc4, 0x06, 0xf6, 0x80, 0x31, 0x20, 0x00, 0x00,
	0xff, 0xff, 0x28, 0x65, 0x4f, 0xdf, 0xce, 0x00, 0x00, 0x00,
}
